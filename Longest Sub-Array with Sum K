
Difficulty: MediumAccuracy: 24.64%Submissions: 465K+Points: 4
Given an array arr[] containing integers and an integer k, your task is to find the length of the longest subarray where the sum of its elements is equal to the given value k. It is guaranteed that a valid subarray exists.

Examples:

Input: arr[] = [10, 5, 2, 7, 1, 9], k = 15
Output: 4
Explanation: The subarray [5, 2, 7, 1] has a sum of 15 and length 4.

appraoch1 using 2 loops
class Solution {
    public int lenOfLongestSubarr(int[] arr, int k) {
        // code here
        int len=0;
        for(int i=0;i<arr.length;i++){
            int sum=0;
            for(int j=i;j<arr.length;j++){
                sum+=arr[j];
                if(sum==k){
                  len=Math.max(len,j-i+1);  
                }
                // sum=0;
            }
        }
        return len;
    }
}

apprach2 using hashmap
class Solution {
    public int lenOfLongestSubarr(int[] arr, int k) {
        // code here
           HashMap<Integer, Integer> map = new HashMap<>();
        int sum =0;
        int maxL = 0;
        for(int i=0;i<arr.length;i++){
            sum += arr[i];
            if(sum == k){
                maxL = i+1;
            }
            if(map.containsKey(sum-k)){
                maxL = Math.max(maxL,i-map.get(sum-k));
            }
            if(!map.containsKey(sum)){
                map.put(sum,i);
            }
        }
        return maxL;
    }
}
