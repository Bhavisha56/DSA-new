Sort 0s, 1s and 2s
Difficulty: EasyAccuracy: 50.58%Submissions: 727K+Points: 2
Given an array arr[] containing only 0s, 1s, and 2s. Sort the array in ascending order.

Examples:

Input: arr[] = [0, 1, 2, 0, 1, 2]
Output: [0, 0, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.

brute appraoch :use inbuilt function tc O(nlogn)
better appraoch:use 3 loops check for 0 1 2 with intialize an array          tc O(3n) sc O(n)

class Solution {
    // Function to sort an array of 0s, 1s, and 2s
    public void sort012(int[] arr) {
        // code here
        ArrayList<Integer> li=new ArrayList<>();
        for(int i=0;i<arr.length;i++){
            if(arr[i]==0){
                li.add(arr[i]);
            }
        }
          for(int i=0;i<arr.length;i++){
            if(arr[i]==1){
                li.add(arr[i]);
            }
        }
          for(int i=0;i<arr.length;i++){
            if(arr[i]==2){
                li.add(arr[i]);
            }
        }
        for(int i=0;i<li.size();i++){
            arr[i]=li.get(i);
        }
    }
}

optimized appraoch : dutch national flag tc O(n) sc O(1)
low=0,mid=0,high=n-1;
if(arr[mid]==0)swap(l,m)l++,mid++;
elseif(arr[mid]==1)mid++;
else swap(m,h)h--;
