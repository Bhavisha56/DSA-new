Given two arrays a[] and b[] of size m and n respectively, the task is to determine whether b[] is a subset of a[]. Both arrays are not sorted, and elements are distinct.

Examples:

Input: a[] = [11, 7, 1, 13, 21, 3, 7, 3], b[] = [11, 3, 7, 1, 7]
Output: true
Explanation: b[] is a subset of a[]

tc O(n^2) sc O(1)

class Solution {
    public boolean isSubset(int a[], int b[]) {
        // Your code here
        int n=a.length;
        int m=b.length;
        for(int i=0;i<m;i++){
        int ans=0;
            for(int j=0;j<n;j++){
                if(b[i]==a[j]){
                    ans=1;
                    break;
                }
            }
            if(ans==0)return false;
        }
        return true;
    }
}


using Hashset tc O(n) sc O(1)
class Solution {
    public boolean isSubset(int a[], int b[]) {
        // Your code here
        int n=a.length;
        int m=b.length;

    HashSet<Integer> set=new HashSet<>();
    for(int i:a){
        set.add(i);
    }
    for(int j:b){
        if(set.contains(j)){
            continue;
        }else{
            return false;
        }
    }
    return true;
    }
}
